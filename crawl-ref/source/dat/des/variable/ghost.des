###############################################################################
# ghost.des
#
# Vaults that place player ghosts. For now, all such vaults that don't place in
# the Vaults branch should appear in this file, even if they're
# branch-specific. For Vaults ghost vaults, we currently use
# branches/vaults_rooms_ghost.des. See the ghost vault guidelines in
# docs/develop/levels/guidelines.md. All vaults here should call the function
# ghost_setup().
#
# Organization:

# <<1>>      General/Abstract ghost vaults
# <<2>>      Themed ghost vaults
#
# General ghost vaults in <<1>> use 098 monsters and any specified monsters
# would be generic things like statue monsters or branch-representative
# monsters. For more thematic vaults, put them in <<2>>.
###############################################################################

: require("dlua/ghost.lua")

{{

-- Make an item definition that will randomly choose from combinations of the
-- given tables of weighted item types and optional egos. If make_arte is true,
-- a quality of 'randart' will be used instead of the default 'good_item'. The
-- separator arg allows using this for MONS statements, where the '|' separator
-- is needed.
function random_item_def(items, egos, make_arte, separator)
    separator = separator ~= nil and separator or '/'
    local item_def

    for iname, iweight in pairs(items) do
        quality = make_arte and " randart" or " good_item"

        -- If we have egos, define an item spec with all item+ego
        -- combinations, each with weight scaled by item rarity and ego
        -- rarity.
        if egos ~= nil then
            for ename, eweight in pairs(egos) do
                if (not iname:find("demon") or ename ~= "holy_wrath")
                   and (not make_arte or ename ~= "none") then
                    def = iname .. quality .. " ego:" .. ename .. " w:" ..
                          math.floor(iweight * eweight)
                    if item_def == nil then
                         item_def = def
                    else
                         item_def = item_def .. " " .. separator .. " " .. def
                    end
                end
            end
        -- No egos, so define item spec with all item combinations, each with
        -- weight scaled by item rarity.
        else
            def = iname .. quality .. " w:" .. iweight
            if item_def == nil then
                 item_def = def
            else
                 item_def = item_def .. " " .. separator .. " " .. def
            end
        end
    end
    return item_def
end

-- Set up the non-flaming edged weapon "left" by the ghost in
-- gammafunk_ghost_hydra_chop.
function setup_hydra_weapon(e)
    -- Possible weapon types with weights. We stick to weapons wieldable by all
    -- non-felids.
    weapons = {["long sword"] = 8, ["scimitar"] = 12, ["demon blade"] = 1,
               ["double sword"] = 1, ["war axe"] = 8, ["broad axe"] = 12,
               ["lajatang"] = 2}

    -- Basic set of egos with weights.
    egos = {["none"] = 30, ["vorpal"] = 15, ["freezing"] = 15,
            ["electrocution"] = 10, ["venom"] = 10, ["protection"] = 10,
            ["vampiric"] = 5, ["holy_wrath"] = 5, ["draining"] = 5,
            ["pain"] = 2, ["distortion"] = 2, ["antimagic"] = 2, ["speed"] = 1}

    local weapon_def = random_item_def(weapons, egos, crawl.one_chance_in(3))
    e.kitem("O = " .. weapon_def)
end

-- Set up equipment for the fancier orc warriors, knights, and warlord in
-- biasface_ghost_orc_armoury.
function setup_armoury_orcs(e)
    warrior_weap = {["long sword"] = 10, ["short sword"] = 10,
                    ["scimitar"] = 10, ["battleaxe"] = 10, ["hand axe"] = 10,
                    ["halberd"] = 10, ["glaive"] = 10, ["mace"] = 10,
                    ["dire flail"] = 10, ["trident"] = 10, ["war axe"] = 9,
                    ["flail"] = 9, ["broad axe"] = 1, ["morningstar"] = 1}
    knight_weap = {["great sword"] = 4, ["long sword"] = 4, ["battleaxe"] = 4,
                   ["war axe"] = 4, ["great mace"] = 3, ["dire flail"] = 2,
                   ["bardiche"] = 1, ["glaive"] = 1, ["broad axe"] = 1 ,
                   ["halberd"] = 1}
    make_arte_weap = crawl.coinflip()
    warrior_def = random_item_def(warrior_weap, nil, make_arte, '|')
    knight_def = random_item_def(knight_weap, nil, make_arte, '|')
    e.kmons("D = orc warrior ; " .. warrior_def .. " . chain mail good_item " ..
            "| chain mail randart | plate armour good_item" ..
            "| plate armour randart")
    e.kmons("E = orc knight ; " .. knight_def .. " . chain mail good_item " ..
            "| chain mail randart | plate armour good_item " ..
            "| plate armour randart")
    e.kmons("F = orc warlord ; " .. knight_def .. " . chain mail good_item " ..
            "| plate armour good_item " ..
            "| plate armour randart . shield good_item w:4" ..
            "| shield randart w:2 | large shield good_item w:2 " ..
            "| large shield randart w:1")
end

-- Basic loot scale for extra loot for lone ghosts
-- takes none_glyph to use when it would like no item
-- adds depth appropriate items to de
function lone_ghost_extra_loot(e,none_glyph)
    if you.in_branch("D") then
        if you.depth() < 6 then
            e.subst("de = " .. none_glyph)
        elseif you.depth() < 9 then
            e.subst("d = %$" .. none_glyph .. none_glyph)
            e.subst("e = " ..none_glyph)
        elseif you.absdepth() < 12 then
            e.subst("d = %$")
            e.subst("e = " ..none_glyph)
        else
            e.subst("d = |*")
            e.subst("e = *$")
        end
    elseif you.in_branch("Lair") then
        e.subst("d = *%")
        e.subst("e = %$" .. none_glyph .. none_glyph)
    elseif you.in_branch("Orc") then
        e.subst("d = |*")
        e.subst("e = %$")
    else
        e.subst("de = |*")
    end
end

-- Basic loot scale for ghost "guarded" loot for lone ghosts
-- KITEMS this to ghost_glyph
function lone_ghost_guarded_loot(e,ghost_glyph)
    if you.in_branch("D") then
        if you.depth() < 6 then
            e.kitem(ghost_glyph .. " = star_item / any")
        elseif you.depth() < 9 then
            e.kitem(ghost_glyph .. " = star_item")
        else
            e.kitem(ghost_glyph .. " = superb_item / star_item")
        end
    else
        e.kitem(ghost_glyph .. " = superb_item / star_item")
    end
end

}}

# Only the below levels and Vaults:1-4 place ghost vaults. A specific ghost
# vault may only be appropriate for a subset of these levels, in which case
# they should set their own DEPTH. Note that if this default depth is changed,
# vaults below with branch-specific item/monster placement may need to be
# updated.
default-depth: D:3-, Lair, Elf, Orc, Snake, Shoals, Swamp, Spider, Depths, \
               Crypt, Zot

###############################################################################
#
# <<1>> General/Abstract ghost vaults.
#
#
###############################################################################

NAME:  gammafunk_ghost_grave
ORIENT: float
WEIGHT: 20 (D:3-11)
: lone_ghost_guarded_loot(_G, "O")
: lone_ghost_extra_loot(_G, "-")
KMONS: O = player ghost
KMONS: p = withered plant
SUBST: t : tp
TILE:  G = dngn_gravestone
TILE:  t = dngn_tree_dead
: set_feature_name("granite_statue", "a gravestone")
FTILE:  -|*%$OGt = floor_pebble_brown / floor_pebble_darkgray
: ghost_setup(_G)
MAP
 cccc
.ndtc
@=OGc
.netc
 cccc
ENDMAP

NAME:  gammafunk_ghost_split
WEIGHT: 2 (D:3-7), 5 (D:8-11)
ORIENT: float
KMONS: O = player ghost
: if you.in_branch("D") then
:     if you.depth() < 6 then
SUBST:  d = *%, e = %$, fgh = .
NSUBST: D = 2=0 / 2=0. / 9. / .
:     elseif you.depth() < 9 then
SUBST:  d = *, e = *%, f = %$..,  gh = .
NSUBST: D = 2=0 / 3=0. / 9. / 98.. / .
:     elseif you.depth() < 12 then
SUBST:  d = |*, e = *, f = %$,  gh = .
NSUBST: D = 2=0 / 4=0. / 2=9. / 8. / .
:     elseif you.depth() < 14 then
SUBST:  de = |*, f = *, g = %$, h = .
NSUBST: D = 2=0 / 3=0. / 9 / 9. / 2=8. / 98.. / .
:     else
SUBST:  def = |*, g = *%, h = %$--
NSUBST: D = 2=0 / 2=0. / 9 / 2=9. / 8 / 8. / .
:     end
# From this point the average monster count stays at 6.5, but the composition
# increases the proporation of 9s and 8s.
: elseif you.in_branch("Lair") then
SUBST:  de = |*, f = *%, g = %$..
NSUBST: D = 3=0 / 3=0. / 2=9. / 8. / 98.. / .
: elseif you.in_branch("Orc") then
SUBST:  de = |*, f = *, g = %$
NSUBST: D = 2=0 / 4=0. / 9 / 9. / 2=8. / .
# All remaining branches.
: else
SUBST:  defgh = |*
NSUBST: D = 2=0 / 2=0. / 9 / 2=9. / 8 / 8. / .
: end
SUBST: c : bcv, p : b., q : b., b : bcv
: ghost_setup(_G)
MAP
...........
.cccnnnccc.
.nD..D..Dc.
.n..qpqg.c.
.=.Dpqpe.n.
@=...O.dDn.
.=.Dpqpf.n.
.n..qpqh.c.
.nD..D..Dc.
.cccnnnccc.
...........
ENDMAP

NAME:   gammafunk_ghost_arena
WEIGHT: 2 (D:3-7), 5 (D:8-11)
ORIENT: float
# TODO: incorporate these into later depth placement and also add to
# ghost_mausoleum.
# ITEM:   any jewellery good_item
# ITEM:   cloak good_item / scarf good_item / helmet good_item / \
#        hat good_item / gloves good_item / pair of boots good_item
KMONS: O = player ghost
: if you.in_branch("D") then
:     if you.depth() < 6 then
SUBST:  d = *%, e = %$, f = %$.., ghij = .
NSUBST: D = 2=0 / 2=0. / 9. / .
:     elseif you.depth() < 9 then
SUBST:  d = *, e = *%, f = %$,  ghi = .
NSUBST: D = 2=0 / 2=0. / 098. / 9. / .
:     elseif you.depth() < 12 then
SUBST:  d = |*, e = *, f = *%,  g = %$.., hi = .
NSUBST: D = 2=0 / 3=0. / 2=9. / 8. / .
:     elseif you.depth() < 14 then
SUBST:  def = |*, g = *, h = %$, ij = .
NSUBST: D = 2=0 / 4=0. / 098. / 9 / 9. / 2=8. / .
:     else
SUBST:  def = |*, g = *, h = %$, ij = .
NSUBST: D = 3=0 / 3=0. / 9 / 2=9. / 8 / 8. / .
:     end
: elseif you.in_branch("Lair") then
SUBST:  de = |*, f = *, g = %$, hij = .
NSUBST: D = 2=0 / 3=0. / 098. / 2=9. / 8. / .
: elseif you.in_branch("Orc") then
SUBST:  def = |*, g = *%, h = %$.., ij = .
NSUBST: D = 2=0 / 4=0. / 9 / 9. / 2=8. / .
: elseif you.in_branch("Elf") then
SUBST:  defg = |*, h = *, i = %$, j = .
SUBST:  de = |*, f = *, g = %$, hij = .
NSUBST: D = 3=0 / 4=0. / 9 / 3=9. / 8 / 2=8. / .
: elseif you.in_branch("Crypt") then
SUBST:  defgh = |*, i = *%, j = %$..
NSUBST: D = 3=0 / 4=0. / 098. / 9 / 3=9. / 8 / 2=8. / .
: elseif you.in_branch("Depths") then
SUBST:  defgh = |*, i = *, j = %$
NSUBST: D = 3=0 / 5=0. / 2=9 / 2=9. / 8 / 3=8. / .
: elseif you.in_branch("Zot") then
SUBST:  defghij = |*
NSUBST: D = 3=0 / 5=0. / 2=9 / 3=9. / 2=8 / 2=8. / .
# Lair branches
: else
SUBST:  defg = |*, h = *%, i = %$.., j = .
NSUBST: D = 3=0 / 3=0. / 098. / 9 / 2=9. / 8 / 8. / .
: end
SUBST:  r : b., s : b., b : bcvx
NSUBST: R = R / .
MARKER: P = lua:transp_loc("ghost_arena_entry")
MARKER: Q = lua:transp_dest_loc("ghost_arena_entry")
MARKER: R = lua:transp_loc("ghost_arena_exit")
MARKER: S = lua:transp_dest_loc("ghost_arena_exit")
: ghost_setup(_G)
MAP
  ...........
 ..nnnnnnnnn..
 .nnRD...DRnn.
 .nG.rsDsrDGn.
 .nD.sr.rsqgn.
..n.D..D.Djen..
@Pn.O.DQD.idnS@
..n.D..D.Dkfn..
 .nD.sr.rsphn.
 .nG.rsDsrDGn.
 .nnRD...DRnn.
 ..nnnnnnnnn..
  ...........
ENDMAP

NAME:    gammafunk_ghost_cemetery
WEIGHT:  5 (D:3-7)
ORIENT:  float
KMONS:   DEF = player ghost
KMONS:   p = withered plant
# 1/12 chance for 5 ghosts, 1/6 for 4, 1/4 for 3, 1/2 for 2.
SHUFFLE: DdqEerFfs / DdqZyzFfs / DdqZyzFfs / DdqEerZyz / DdqEerZyz / \
         DdqEerZyz / DdqZyzZyz / DdqZyzZyz / DdqZyzZyz / DdqZyzZyz / \
         DdqZyzZyz / DdqZyzZyz
# 1.5 items per ghost, upgrading quality with depth.
: if you.in_branch("D") then
:     if you.depth() < 6 then
NSUBST:  d = 2=*% / %$--, e = *% / %$--, f = 2=*% / %$--
:     elseif you.depth() < 9 then
NSUBST:  d = 2=* / *%--, e = * / *%--, f = 2=* / *%--
:     elseif you.depth() < 12 then
NSUBST:  d = 2=|* / *-, e = |* / *-, f = 2=|* / *-
:     else
NSUBST:  d = 2=|* / |*--, e = |* / |*--, f = 2=|* / |*--
:     end
# All non-Dungeon branches.
: else
NSUBST:  d = 2=|* / |*--, e = |* / |*--, f = 2=|* / |*--
: end
SUBST:   qrs = G, Z = -, y = p, z = V, t : tp
TILE:    G = dngn_gravestone
TILE:    t = dngn_tree_dead
FTILE:   -|*%$DEFpGt = floor_pebble_brown / floor_pebble_darkgray
: set_feature_name("granite_statue", "a gravestone")
: ghost_setup(_G)
MAP
   ccccc
  ccerecc
 ccd-E-dcc
ccq-----qcc
cd-D---D-dc
cf-------fc
csF-----Fsc
cf-------fc
ccnn===nncc
  ...@...
ENDMAP

NAME: ebering_ghost_inner_flame
WEIGHT: 2 (D:3-7), 5 (D:8-11)
KPROP: cn'O = w:5 bloody / nothing
KMONS: O = player_ghost
KITEM: O = scroll of immolation ident:all
NSUBST: ' = |* / |*$ / 998 / dF / 3=d. / F. / .
MARKER: F = lua:fog_machine { cloud_type = "flame", \
            pow_min = 10000, pow_max = 10000, delay = 1, \
            size = 1, walk_dist = 0, start_clouds = 1 }
: dgn.delayed_decay(_G, "d", "chunk")
: ghost_setup(_G)
MAP
 ccccc
.n'''c
@='O'c
.n'''c
 ccccc
ENDMAP

NAME: ebering_ghost_gozag
WEIGHT: 2 (D:3-7), 5 (D:8-11)
ORIENT: float
# If ghost selectors ever happen this should be a gozag ghost
KMONS: O = player_ghost
KFEAT: O = abandoned_shop
ITEM: acquire gold
NSUBST: ' = d / 2=998 / $
KFEAT: Z = altar_gozag
SUBST: _ = GZ
TILE: G = dngn_golden_statue
FTILE: -d$89OGZ = floor_limestone
RTILE: c = wall_sandstone
COLOUR: cG = yellow
: set_feature_name("granite_statue", "golden statue")
: set_feature_name("stone_wall", "golden wall")
: ghost_setup(_G)
MAP
  ccc
 ccOcc
cc'''cc
c'-_-'c
cc---cc
 cn=nc
  .@.
ENDMAP

NAME: ebering_ghost_rock_garden
ORIENT: float
KMONS: O = player_ghost
: local large_rocks = crawl.random_range(3,7)
: kitem("O = large rock q:" .. large_rocks)
KITEM: ' = stone q:1 / large rock w:1
NSUBST: r = O / d / e / tG / t'' / '
: lone_ghost_extra_loot(_G, "'")
COLOUR: -deOtG'|*%$ = yellow, c = white
FTILE: -deOtG'|*%$ = floor_dirt
: ghost_setup(_G)
MAP
ccccccccc
c---r-r-c
crr-----c
c----r--c
c--r----c
cr----r-c
cnn===nnc
 ...@...
ENDMAP

NAME: ebering_ghost_reflecting_pool
ORIENT: float
KMONS: O = player_ghost
KFEAT: O = shallow_water
: lone_ghost_guarded_loot(_G, "O")
: lone_ghost_extra_loot(_G, "-")
FTILE:  -|*%$O : floor_pebble_brown / floor_pebble_darkgray
MAP
ccccc
cdOec
c-w-c
c-w-c
c-w-c
c-W-c
cn=nc
 .@.
ENDMAP

NAME: ebering_ghost_xom
ORIENT: float
KMONS: O = player_ghost
KFEAT: O = altar_xom
: lone_ghost_extra_loot(_G,"-")
{{
  egos = {["vorpal"] = 20, ["freezing"] = 15, ["flaming"] = 15,
          ["venom"] = 10, ["protection"] = 10, ["electrocution"] = 5,
          ["draining"] = 5, ["antimagic"] = 2}
  local dagger_def = random_item_def({["dagger"] = 10}, egos,
                                     crawl.one_chance_in(7), "|")
  mons("dancing weapon; " .. dagger_def)
}}
FTILE:  -|*%$O1 : floor_pebble_brown / floor_pebble_darkgray
MAP
 ccc
cc1cc
cdOec
cn=nc
..@..
ENDMAP

###############################################################################
#
# <<2>> Themed ghost vaults.
#
#
###############################################################################

NAME:   gammafunk_ghost_necromancy
# Omit Elf since that branch has few good monsters for derived undead.
DEPTH:  D:3-, Lair, Orc, Shoals, Snake, Spider, Swamp, Crypt, Depths, Zot
ORIENT: float
KMONS:  O = player ghost
# Progressive depth/numbers of zombies and type/amount of loot.
# First handle Dungeon.
: if you.in_branch("D") then
:     if you.depth() < 6 then
MONS:   skeleton place:D:6 / zombie place:D:6
SUBST:  d = *%, e = %$, fghij = -
NSUBST: 1 = 2=1 / 1---
:     elseif you.depth() < 9 then
MONS:   skeleton place:D:9 / zombie place:D:9 / spectre place:D:9 / \
        simulacrum place:D:9
SUBST:  d = *, e = *%, f = %$--, ghij = -
NSUBST: 1 = 2=1 / 1-
:     elseif you.depth() < 12 then
MONS:   w:5 zombie place:D:12 / spectre place:D:12 / simulacrum place:D:12
SUBST:  d = |*, e = *, f = %$, ghij = -
NSUBST: 1 = 3=1 / 1-, - = 1- / -
:     elseif you.depth() < 15 then
MONS:   w:5 zombie place:D:15 / spectre place:D:15 / simulacrum place:D:15
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: - = 4=1- / -
:     else
MONS:   place:Depths:1 zombie / place:Depths:1 spectre / \
        place:Depths:1 simulacrum
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: - = 1 / 4=1- / -
:     end
# Set up derived undead from branch end for non-Dungeon branches.
: else
{{
  undead_place = "place:" .. you.branch() .. ":" .. dgn.br_depth(you.branch())
  mons(undead_place .. " spectre / " .. undead_place .. " simulacrum")
}}
# Handle loot/monsters for non-Dungeon branches.
:     if you.in_branch("Lair") then
SUBST:  de = |*, f = *%, g = %$--, hij = -
NSUBST: 1 = 4=1 / 1-, - = 2=1- / -
:     elseif you.in_branch("Orc") then
SUBST:  de = |*, f = *, g = %$, hij = -
NSUBST: 1 = 5=1 / 1-, - = 3=1- / -
:     elseif you.in_branch("Crypt") then
MONS: revenant / curse skull
SUBST:  defg = |*, h = *, i = %$, j = -
NSUBST: 1 = 12 / 1, - = 3=1 / 6=1- / -
:     elseif you.in_branch("Depths") then
MONS: ancient lich
SUBST:  defgh = |*, i = *%, j = %$--
NSUBST: 1 = 2=12 / 1, - = 3=1 / 8=1- / -
:     elseif you.in_branch("Zot") then
MONS: ancient lich, curse toe
SUBST:  defghij = |*
NSUBST: 1 = 12 / 123 / 1, - = 4=1 / 8=1- / -
# Lair branches
:     else
SUBST:  def = |*, g = *, h = %$, ij = -
NSUBST: - = 2=1 / 4=1- / -
:     end
: end
FTILE:  -|*%$O12G = floor_pebble_brown / floor_pebble_darkgray
: ghost_setup(_G)
MAP
 ccccccc
.n1c1c1c
.n---igc
.=---ecc
@=---dOc
.=---fcc
.n---jhc
.n1c1c1c
 ccccccc
ENDMAP

NAME:   gammafunk_ghost_spectres
DEPTH:  D:8-, Crypt
ORIENT: float
KMONS:  O = player ghost
# Dungeon levels
: if you.absdepth() < 10 then
MONS:   wraith, shadow / freezing wraith
SUBST:  d = *, e = *%, f = %$--,  ghi = -
NSUBST: D = 2=1 / 4=1- / -
: elseif you.absdepth() < 12 then
MONS:   wraith, shadow / freezing wraith
SUBST:  d = |*, e = *, f = %$,  ghi = -
NSUBST: D = 3=1 / 2=1- / 2-, - = 1- / -
: elseif you.absdepth() < 14 then
MONS:  wraith, shadow / freezing wraith
MONS:  shadow wraith / flayed ghost / phantasmal warrior
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: D = 4=1 / 1222 / 23--, - = 1- / -
: elseif you.absdepth() < 16 then
MONS:   wraith, shadow / freezing wraith
MONS:   shadow wraith / flayed ghost / phantasmal warrior
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: D = 2=1 / 12 / 2=2- / 3-, - = 1 / 3=1- / -
# Crypt
: else
MONS:   wraith / shadow
MONS:   freezing wraith / shadow wraith / phantasmal warrior / flayed ghost w:5
MONS:   eidolon, revenant / curse skull
SUBST:  defg = |*, h = *, i = %$
NSUBST: D = 2 / 3 / 2=3- / 4-, - = 2=1 / 2=1- / 2 / 3=2- / -
: end
FTILE:  -|*%$O1234G = floor_pebble_brown / floor_pebble_darkgray
: ghost_setup(_G)
MAP
 ccccccc
.nDcDcDc
.n----gc
.=---eGc
@=--idOc
.=---fGc
.n----hc
.nDcDcDc
 ccccccc
ENDMAP

NAME:   gammafunk_ghost_ooze
DEPTH:  D:8, Lair, Depths
ORIENT: float
KMONS:  O = player ghost
MONS:   jelly, slime creature, death ooze
: if you.in_branch("D") then
:     if you.depth() < 10 then
SUBST:  d = *, e = *%, f = %$--,  ghi = -
NSUBST: - = 2=1 / 4=1. / 2 / 2=2. / .
:     elseif you.depth() < 12 then
SUBST:  d = |*, e = *, f = %$,  ghi = -
NSUBST: - = 2=1 / 4=1. / 2=2 / 2=2. / .
:     elseif you.depth() < 14 then
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: - =  2=1 / 3=1. / 2=2 / 4=2. / 3. / .
:     else
SUBST:  defg = |*, h = *, i = %$, j = -
NSUBST: - =  2=1 / 2=1. / 2=2 / 5=2. / 3 / 3. / .
:     end
: elseif you.in_branch("Lair") then
:     if you.depth() < 5 then
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: - =  2=1 / 3=1. / 2=2 / 4=2. / 3. / .
:     else
SUBST:  defg = |*, h = *, i = %$, j = -
NSUBST: - =  2=1 / 2=1. / 2=2 / 5=2. / 3 / 3. / .
:     end
# Depths
: else
SUBST:  defgh = |*, i = *%, j = %$--
NSUBST: - = 6=2 / 7=2. / 4=3 / 8=3. / .
: end
KFEAT:  _ = altar_jiyva
COLOUR: c = green
COLOUR: n = lightgreen
FTILE:  -|*%$O01289G = floor_pebble_brown / floor_pebble_darkgray
: ghost_setup(_G)
MAP
  ccccc
 cc---cn.
cci----n.
ceg----=.
c_dO---=@
cfh----=.
ccj----n.
 cc---cn.
  ccccc
ENDMAP

NAME:   gammafunk_ghost_mausoleum
DEPTH:  D:3-, Swamp, Crypt, Depths, Zot
WEIGHT: 2 (D:3-7), 5 (D:8-11)
ORIENT: float
KMONS:  O = player ghost
: if you.in_branch("D") then
:     if you.depth() < 6 then
MONS:   skeleton place:D:6 / zombie place:D:6
MONS:   mummy / shadow imp / wight / necrophage / phantom / hungry ghost
SUBST:  d = *%, e = %$, f = %$--, ghij = -
NSUBST: D = 2=1 / 2=1- / 2- / -
:     elseif you.depth() < 9 then
MONS:   skeleton place:D:9 / zombie place:D:9 / spectre place:D:9 / \
        simulacrum place:D:9 / mummy / shadow imp / wight / necrophage / \
        phantom / hungry ghost
MONS:   wraith / vampire
SUBST:  d = *, e = *%, f = %$,  ghi = -
NSUBST: D = 2=1 / 3=1- / 2- / 2--- / -
:     elseif you.depth() < 12 then
MONS:   mummy / wight / zombie place:D:12 / spectre place:D:12 / \
        simulacrum place:D:12 / phantom / hungry ghost / wraith / vampire
MONS:   vampire mosquito band / shadow / death knight / skeletal warrior / \
        freezing wraith w:5
SUBST:  d = |*, e = *, f = *%,  g = %$--, hi = -
NSUBST: D = 2=1 / 4=1- / 2=2- / -
:     elseif you.depth() < 15 then
MONS:   zombie place:D:15 / spectre place:D:15 / simulacrum place:D:15 / \
        vampire mosquito band / death knight / skeletal warrior
MONS:   freezing wraith / necromancer / shadow wraith / vampire knight / \
        phantasmal warrior / flayed ghost
SUBST:  def = |*, g = *, h = %$, ij = -
NSUBST: D = 3=1 / 5=1- / 2 / 222- / -
:     else
MONS:   zombie place:Depths:1 / spectre place:Depths:1 / \
        simulacrum place:Depths:1 / \
        vampire mosquito band / death knight / skeletal warrior / \
        freezing wraith
MONS:   necromancer / shadow wraith / vampire knight / phantasmal warrior / \
        flayed ghost
SUBST:  def = |*, g = *, h = %$, ij = -
NSUBST: D = 4=1 / 4=1- / 2 / 2=2- / -
:     end
: elseif you.in_branch("Swamp") then
MONS:   spectre place:Swamp:4 / simulacrum place:Swamp:4 / shadow / \
        bog body / vampire mosquito band / tyrant leech
MONS:   ghost crab / hydra spectre / hydra simulacrum
SUBST:  defg = |*, h = *%, i = %$--, j = -
NSUBST: D = 4=1 / 5=1- / 2 / 2=2- / 2--- / -
: elseif you.in_branch("Crypt") then
SUBST:  defgh = |*, i = *%, j = %$..
NSUBST: D = 5=0 / 5=0- / 98 / 3=98-- / 98------ / -
: elseif you.in_branch("Depths") then
MONS:   spectre place:Depths:5 / simulacrum place:Depths:5 / \
        necromancer / vampire knight / vampire mage / sphinx / flayed ghost w:5
MONS:   lich / deep elf death mage / juggernaut simulacrum / \
        juggernaut spectre / caustic shrike simulacrum / caustic shrike spectre
MONS:   ancient lich
SUBST:  defgh = |*, i = *, j = %$
NSUBST: D = 5=0 / 6=0- / 2 / 4=2- / 3- / -
: elseif you.in_branch("Zot") then
MONS:   simulacrum place:Zot:5 / spectre place:Zot:5 / shadow dragon / \
        death cob
MONS:   golden dragon simulacrum / golden dragon spectre / \
        quicksilver dragon simulacrum / quicksilver dragon spectre / \
        killer klown simulacrum / killer klown spectre / ancient lich
MONS:   curse toe
SUBST:  defghij = |*, 2 = 12
NSUBST: D = 5=0 / 7=0- / 2=2 / 2=2- / 3- / -
: end
NSUBST: R = R / -
MARKER: P = lua:transp_loc("ghost_mausoleum_entry")
MARKER: Q = lua:transp_dest_loc("ghost_mausoleum_entry")
MARKER: R = lua:transp_loc("ghost_mausoleum_exit")
MARKER: S = lua:transp_dest_loc("ghost_mausoleum_exit")
FTILE:  -|*%$O01289G = floor_pebble_brown / floor_pebble_darkgray
: ghost_setup(_G)
MAP
 ...............
 .nnnnnnnnnnnnn.
 .nR--D---D--Rn.
 .n-D---D---D-n.
 .n--ccc-ccc-in.
 .n-DcGcDcGcDgn.
..n----------en..
@PnOD-D-Q-D-DdnS@
..n----------fn..
 .n-DcGcDcGcDhn.
 .n--ccc-ccc-jn.
 .n-D---D---D-n.
 .nR--D---D--Rn.
 .nnnnnnnnnnnnn.
 ...............
ENDMAP

NAME:   gammafunk_ghost_hydra_chop
DEPTH:  D:8-, Lair, Swamp
ORIENT: float
: setup_hydra_weapon(_G)
KMONS:  O = player ghost
{{
-- Set up hydra monster entry with a range of possible extra heads based on
-- depth.
max_heads = 11 + math.floor((you.absdepth() - 8) / 2)
for h = 9, max_heads do
    def = h .. "-headed hydra"
    if hydra_def == nil then
        hydra_def = def
    else
        hydra_def = hydra_def .. " / " .. def
    end
end
mons(hydra_def)
}}
KMONS:  pq = plant
KFEAT:  q = W
SUBST:  t = tttWpq'
: if you.absdepth() < 10 then
NSUBST: ' = * / *% / -, - = 1 / 1--- / -
: elseif you.absdepth() < 12 then
NSUBST:  ' = |* / * / %$-- / -, - = 1 / 1- / -
: elseif you.absdepth() < 14 then
NSUBST:  ' = 2=|* / %$ / -, - = 1 / 111- / -
: elseif you.absdepth() <= 16 then
NSUBST:  ' = 2=|* / *% / %$-- / -, - = 1 / 2=1- / -
: else
NSUBST:  ' = 4=|* / -, - = 1 / 3=1- / -
: end
: ghost_setup(_G)
MAP
  ccccc
 cctttcn.
cct'''-n.
ct''---=.
ct'-O--=@
ct''---=.
cct'''-n.
 cctttcn.
  ccccc
ENDMAP

NAME:   gammafunk_ghost_fury_of_okawaru
DEPTH:  D:12-, Orc, Elf, Crypt
ORIENT: float
KFEAT:  O = altar_okawaru
KMONS:  O = player ghost
: if you.in_branch("D") then
:      if you.depth() < 14 then
MONS:   orc warrior / centaur warrior / tengu warrior
MONS:   orc knight / naga warrior / merfolk impaler
MONS:   merfolk javelineer / deep elf knight / deep elf archer
SUBST:  def = |*, g = *, h = %$, ij = -
NSUBST: - = 2=1 / 4=1- / 12-- / 2 / 2=2- / 3- / -
:      else
MONS:   orc warrior / centaur warrior / tengu warrior / orc knight / \
        naga warrior / merfolk impaler
MONS:   merfolk javelineer / deep elf knight / deep elf archer
MONS:   stone giant / minotaur / fire giant / frost giant / orc warlord
SUBST:  def = |*, g = *, h = %$, ij = -
NSUBST: - = 3=1 / 3=1- / 2 / 3=2- / 333- / -
:      end
: elseif you.in_branch("Orc") then
MONS:   orc warrior / centaur warrior / tengu warrior / orc knight
MONS:   naga warrior / merfolk impaler / merfolk javelineer / \
        deep elf knight / deep elf archer
MONS:   minotaur / stone giant / orc warlord
NSUBST: - = 2=1 / 4=1- / 12-- / 2 / 2=2- / 3- / -
: elseif you.in_branch("Elf") then
MONS:   centaur warrior / tengu warrior / orc knight / naga warrior / \
        merfolk impaler / merfolk javelineer / deep elf knight / \
        deep elf archer
MONS:   minotaur / stone giant / orc warlord
MONS:   fire giant / frost giant / deep elf blademaster / \
        deep elf master archer / titan
SUBST:  defgh = |*, i = *%, j = %$..
NSUBST: - = 3=1 / 4=1- / 2=2 / 2=2- / 2=3- / 3--- / -
# Crypt
: else
MONS:   centaur warrior / tengu warrior / naga warrior / merfolk impaler / \
        merfolk javelineer / deep elf knight / deep elf archer
MONS:   minotaur / stone giant / orc warlord / fire giant / frost giant / \
        deep elf blademaster / deep elf master archer
MONS:   titan
SUBST:  defgh = |*, i = *%, j = %$..
NSUBST: - = 3=1 / 4=1- / 12-- / 2=2 / 2=2- / 3 / 3- / -
: end
: ghost_setup(_G)
MAP
ccccccccccc
cGvvvvvvvGc
c-igvOvhj-c
c---edf---c
c-vG---Gv-c
c---------c
c-vG---Gv-c
c---------c
cnnn===nnnc
 ....@....
ENDMAP

NAME:   muffindrake_ghost_dual_entry
DEPTH:  D:10-, Depths
WEIGHT: 5 (D:10-11)
ORIENT: float
KMONS:  O = player_ghost
: if you.in_branch("D") then
MONS:   skeletal warrior / vampire
MONS:   wraith / simulacrum place:D:15
MONS:   necromancer
MONS:   lich
: else
MONS:   vampire knight / vampire mage
MONS:   flayed ghost / juggernaut simulacrum
MONS:   deep elf death mage
MONS:   ancient lich
: end
NSUBST: - = 2=1 / 2=1- / 2 / 2=2- / 3 / -
TILE:   G = dngn_gravestone
TILE:   t = dngn_tree_dead
FTILE:  GtO123498$*|- = floor_pebble_brown / floor_pebble_darkgray
: set_feature_name("granite_statue", "a gravestone")
: ghost_setup(_G)
MAP
     .@.
  cccc.ccc
  c|-n.n-cc
  c-$nnn-*ccc
  c-|cGc$$-*c
  cc-cOc-cc$c
  cG-G4G-Gc-c
 cc---9-----c
 ct8-nnn-8--c
cc--nn.nn-t-c
c---n...n---c
c-t-n.T.nt-cc
cc--c...c--c
 c=cc. .cc=c
  @... ...@
ENDMAP

NAME:   muffindrake_ghost_three_little_ghosts
DEPTH:  Depths
ORIENT: float
KMONS:  O = player_ghost
MONS:   deep troll shaman band
MONS:   stone giant / deep troll earth mage / golden dragon
MONS:   iron troll / iron dragon, iron giant
NSUBST:  2 = 2=2 / 2=2., 3 = 2=3 / 2=3.
: ghost_setup(_G)
MAP
vvvvvvv
v$*|*$v
v$3O3$v
v.343.v
v.....v
v.....v
vvn=nvv
 v...v
bbb+bbb
b.*|$.b
b.2O2.b
b.2.2.b
b.....b
b.....b
bbn=nbb
 b...b
ccc+ccc
c.*|$.c
c..O..c
c..1..c
c.....c
c.....c
ccn=ncc
  .@.
ENDMAP

NAME:   muffindrake_ghost_dead_mans_drink
DEPTH:  Depths
ORIENT: float
KMONS:  p = col:brown fungus
KMONS:  O = player_ghost
MONS:   stone giant zombie / stone giant simulacrum / spectral stone giant
MONS:   titan zombie / titan simulacrum / spectral titan
MONS:   juggernaut zombie / juggernaut simulacrum / spectral juggernaut
NSUBST: 1 = 3=1 / 4=1., 2 = 2=2 / 4=2., 3 = 2=3 / 4=3.
: dgn.delayed_decay(_G, "'", "felid corpse")
: ghost_setup(_G)
MAP
 ccccccc
 c--+*Tc
.cT1xxxc  .@.
@n--+3Tccccncccc
.cT2xxxc|$$-2--c
 c--+3Tc|$$-3--c
 c+cccccvvvccc+c
 c----'vTO*--+-c
 c-----ppppppp-c
 c3p-'---3--2--c
 c-p1-1---2----c
 c2p--p2-3p-1p2c
 c-1--1-'----1-c
 ccncccn=ncccncc
  ......@.'....
ENDMAP

NAME: biasface_ghost_demon_polymorph
DEPTH: Depths
KMONS: O = player ghost
KITEM: O = wand of polymorph ident:type
MONS: any common demon
MONS: balrug / blizzard demon / cacodemon / green death / \
      hell beast / lorocyproca / shadow demon
MONS: brimstone fiend / tzitzimitl / ice fiend / hell sentinel
SUBST: d = |*
NSUBST: - = 4=1 / 6=1. / 2=2. / .
TILE: G = dngn_statue_imp / dngn_statue_cerebov / dngn_statue_demonic_bust / \
          dngn_statue_ancient_evil
: ghost_setup(_G)
MAP
vvvvvvvvv
vGdddddGv
v$$232$$v
v--lll--v
v--lll--v
v--lll--v
v-.O...-v
vnn===nnv
G...@...G
ENDMAP

NAME:   ebering_ghost_funeral_grove
DEPTH:  D:8-, Lair, Swamp
ORIENT: float
# Monsters and loot
KITEM:  O = potion of lignification ident:all
KMONS:  O = player ghost
: if you.in_branch("Swamp") then
MONS:   spriggan rider, spriggan rider ; spear randart | trident randart
MONS:   spriggan druid
NSUBST: ' = 4=|* / 098 / 098. / 111. / 2 / 3 / .
# Lair and Dungeon
: else
MONS:   wolf / black bear / polar bear
MONS:   spriggan ; spear | trident, spriggan ; spear randart | trident randart
MONS:   spriggan rider, spriggan rider ; spear randart | trident randart
MONS:   boggart
:     if you.absdepth() < 10 then
NSUBST: ' = * / *% / 1 / 1. / 2 / 2. / 3 / .
:     elseif you.absdepth() < 12 then
NSUBST: ' = |* / * / %$.. / 1 / 1. / 2 / 2. / 3 / 4. / .
:     elseif you.absdepth() < 14 then
NSUBST: ' = 2=|* / %$ / 1 / 1. / 2 / 24.. / 5 / 6. / .
:     else
NSUBST: ' = 2=|* / *% / %$.. / 1 / 122. / 244. / 5 / 6 / .
:     end
: end
# Foliage, 1/5 chance for death theme in swamp or Autumn theme elsewhere.
: if crawl.one_chance_in(5) then
:     if you.in_branch("Swamp") then
KMONS:  p = withered plant / fungus
COLOUR: t = lightgrey / darkgrey / brown
TILE: t = dngn_tree_dead / dngn_tree_yellow w:5
: set_feature_name("tree","dead tree")
:     else
KMONS:  p = plant / fungus
COLOUR: t = lightred / red w:4 / yellow w:4
TILE:   t = dngn_tree_lightred / dngn_tree_red w:4 / dngn_tree_yellow w:4
:     end
: else
KMONS:  p = plant / fungus w:2
: end
SUBST:  - = pt., S : GV A:1
# Dungeon needs floor color and tiles.
: if you.in_branch("Dungeon") then
COLOUR: .pO012345689|*$ = green
FTILE:  tGVA.pO012345689|*$ = floor_moss
: end
: ghost_setup(_G)
MAP
  ttttttt
 tt'''--tt
 t'-t-..-t
 tt-'O--.t
tt-..t--.tt
t-'-.---t't
t'tnn=nnt't
ttnS...Sntt
 ....@....
ENDMAP

NAME:   biasface_ghost_orc_armoury
DEPTH:  D:3-, Orc
ITEM:   boots / helmet / hat / gloves / cloak
ITEM:   boots good_item / helmet good_item / hat good_item / \
        gloves good_item / cloak good_item
ITEM:   any armour, any armour good_item, any weapon, any weapon good_item
ITEM:   any jewellery, any jewellery good_item
KMONS:  O = player ghost
MONS:   orc, orc ; any weapon good_item | any weapon randart . \
            leather armour good_item | leather_armour randart | \
            ring mail good_item | ring mail randart | scale mail good_item | \
            scale mail randart | chain mail good_item | chain mail randart
MONS:   orc priest, warg, orc warrior, orc knight, orc high priest
: setup_armoury_orcs(_G)
: if you.in_branch("D") then
:     if you.depth() < 4 then
SUBST:  hj = -
NSUBST: - = 3=1 / 6=1. / 2 / 3... / .
:     elseif you.depth() < 6 then
SUBST:  h = h-, j = -
NSUBST: - = 3=1 / 6=1. / 2 / 3 / 3. / 5... / .
:     elseif you.depth() < 9 then
SUBST:  d = e, j = -
NSUBST: - = 3=1 / 6=1. / 3 / 3. / 4... / 2=5. / D / .
:     elseif you.depth() < 12 then
SUBST:  d = e, f = g, j = j-
NSUBST: - = 3=1 / 6=1. / 3 / 3. / 4. / 5 / 2=5. / D / .
:     elseif you.depth() < 14 then
SUBST:  d = e, f = g, h = i
NSUBST: - = 3=1 / 4=1. / 3 / 2=3. / 4. / 2=5 / 4=5. / DDDE / .
:     else
SUBST:  d = e, f = g, h = i, j = k
NSUBST: - = 3=1 / 4=1. / 3 / 3. / 4. / 2=5 / 2=5. / 2=6 / 2=6. / EEEF / .7 / .
:    end
# Orc
: else
SUBST:  d = e, f = g, h = i, j = k
NSUBST: - = 3=1 / 4=1. / 3 / 3. / 4. / 2=5 / 2=5. / 2=6 / 2=6. / EEEF / .7 / .
: end
KFEAT:  _ = altar_beogh
: ghost_setup(_G)
MAP
ccccccccccccccc
cI---hd_fj---Ic
c-------------c
c-cIc--I--cIc-c
c-cnc--O--cnc-c
c----ccncc----c
c.............c
cnnnnn===nnnnnc
I......@......I
ENDMAP
