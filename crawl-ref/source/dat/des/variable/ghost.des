###############################################################################
# ghost.des
#
# Vaults that place player ghosts. For now, all such vaults that don't place in
# the Vaults branch should appear in this file, even if they're
# branch-specific. For Vaults ghost vaults, we currently use
# branches/vaults_rooms_ghost.des. See the ghost vault guidelines in
# docs/develop/levels/guidelines.md. All vaults here should call the function
# ghost_vault_setup().
#
# Organization:

# <<1>>      Generic/Abstract ghost vaults
# <<2>>      Themed ghost vaults
#
# Generic ghost vaults in <<1>> use 098 monsters and any specified monsters
# would be very generic. For more thematic vaults, put them in <<2>>.
###############################################################################

: require("dlua/ghost.lua")

# Only the below levels and Vaults:1-4 place ghost vaults. A specific ghost
# vault may only be appropriate for a subset of these levels, in which case
# they should set their own DEPTH. Note that if this default depth is changed,
# vaults below with branch-specific item/monster placement may need to be
# updated.
default-depth: D:3-, Lair, Elf, Orc, Snake, Shoals, Swamp, Spider, Depths, \
               Crypt, Zot

###############################################################################
#
# <<1>> Generic/Abstract ghost vaults.
#
#
###############################################################################

NAME:  gammafunk_ghost_grave
ORIENT: float
WEIGHT: 20 (D:3-11)
: if you.in_branch("D") then
:     if you.depth() < 6 then
KITEM: O = star_item / any
SUBST: de = -
:     elseif you.depth() < 9 then
KITEM: O = star_item
SUBST: d = %$--, e = -
:     elseif you.absdepth() < 12 then
KITEM: O = superb_item / star_item
SUBST: d = %$, e = -
:     else
KITEM: O = superb_item / star_item
SUBST: d = |*, e = *$
:     end
: elseif you.in_branch("Lair") then
KITEM: O = superb_item / star_item
SUBST: d = *%, e = %$--
: elseif you.in_branch("Orc") then
KITEM: O = superb_item / star_item
SUBST: d = |*, e = %$
: else
KITEM: O = superb_item / star_item
SUBST: de = |*
: end
KMONS: O = player ghost
KMONS: p = withered plant
SUBST: t : tp
TILE:  G = dngn_gravestone
TILE:  t = dngn_tree_dead
: set_feature_name("granite_statue", "a gravestone")
FTILE:  -|*%$OGt = floor_pebble_brown / floor_pebble_darkgray
: ghost_vault_setup(_G)
MAP
 cccc
.ndtc
@=OGc
.netc
 cccc
ENDMAP

NAME:  gammafunk_ghost_split
WEIGHT: 2 (D:3-7), 5 (D:8-11)
ORIENT: float
KMONS: O = player ghost
: if you.in_branch("D") then
:     if you.depth() < 6 then
SUBST:  d = *%, e = %$, fgh = .
NSUBST: D = 2=0 / 2=0. / 9. / .
:     elseif you.depth() < 9 then
SUBST:  d = *, e = *%, f = %$..,  gh = .
NSUBST: D = 2=0 / 3=0. / 9. / 98.. / .
:     elseif you.depth() < 12 then
SUBST:  d = |*, e = *, f = %$,  gh = .
NSUBST: D = 2=0 / 4=0. / 2=9. / 8. / .
:     elseif you.depth() < 14 then
SUBST:  de = |*, f = *, g = %$, h = .
NSUBST: D = 2=0 / 3=0. / 9 / 9. / 2=8. / 98.. / .
:     else
SUBST:  def = |*, g = *%, h = %$--
NSUBST: D = 2=0 / 2=0. / 9 / 2=9. / 8 / 8. / .
:     end
# From this point the average monster count stays at 6.5, but the composition
# increases the proporation of 9s and 8s.
: elseif you.in_branch("Lair") then
SUBST:  de = |*, f = *%, g = %$..
NSUBST: D = 3=0 / 3=0. / 2=9. / 8. / 98.. / .
: elseif you.in_branch("Orc") then
SUBST:  de = |*, f = *, g = %$
NSUBST: D = 2=0 / 4=0. / 9 / 9. / 2=8. / .
: else
SUBST:  defgh = |*
NSUBST: D = 2=0 / 2=0. / 9 / 2=9. / 8 / 8. / .
: end
SUBST: c : bcv, p : b., q : b., b : bcv
: ghost_vault_setup(_G)
MAP
...........
.cccnnnccc.
.nD..D..Dc.
.n..qpqg.c.
.=.Dpqpe.n.
@=...O.dDn.
.=.Dpqpf.n.
.n..qpqh.c.
.nD..D..Dc.
.cccnnnccc.
...........
ENDMAP

NAME:   gammafunk_ghost_arena
WEIGHT: 2 (D:3-7), 5 (D:8-11)
ORIENT: float
# TODO: incorporate these into later depth placement and also add to
# ghost_mausoleum.
# ITEM:   any jewellery good_item
# ITEM:   cloak good_item / scarf good_item / helmet good_item / \
#        hat good_item / gloves good_item / pair of boots good_item
KMONS: O = player ghost
: if you.in_branch("D") then
:     if you.depth() < 6 then
SUBST:  d = *%, e = %$, f = %$.., ghij = .
NSUBST: D = 2=0 / 2=0. / 9. / .
:     elseif you.depth() < 9 then
SUBST:  d = *, e = *%, f = %$,  ghi = .
NSUBST: D = 2=0 / 2=0. / 098. / 9. / .
:     elseif you.depth() < 12 then
SUBST:  d = |*, e = *, f = *%,  g = %$.., hi = .
NSUBST: D = 2=0 / 3=0. / 2=9. / 8. / .
:     elseif you.depth() < 14 then
SUBST:  def = |*, g = *, h = %$, ij = .
NSUBST: D = 2=0 / 4=0. / 098. / 9 / 9. / 2=8. / .
:     else
SUBST:  def = |*, g = *, h = %$, ij = .
NSUBST: D = 3=0 / 3=0. / 9 / 2=9. / 8 / 8. / .
:     end
: elseif you.in_branch("Lair") then
SUBST:  de = |*, f = *, g = %$, hij = .
NSUBST: D = 2=0 / 3=0. / 098. / 2=9. / 8. / .
: elseif you.in_branch("Orc") then
SUBST:  def = |*, g = *%, h = %$.., ij = .
NSUBST: D = 2=0 / 4=0. / 9 / 9. / 2=8. / .
: elseif you.in_branch("Elf") then
SUBST:  defg = |*, h = *, i = %$, j = .
SUBST:  de = |*, f = *, g = %$, hij = .
NSUBST: D = 3=0 / 4=0. / 9 / 3=9. / 8 / 2=8. / .
: elseif you.in_branch("Crypt") then
SUBST:  defgh = |*, i = *%, j = %$..
NSUBST: D = 3=0 / 4=0. / 098. / 9 / 3=9. / 8 / 2=8. / .
: elseif you.in_branch("Depths") then
SUBST:  defgh = |*, i = *, j = %$
NSUBST: D = 3=0 / 5=0. / 2=9 / 2=9. / 8 / 3=8. / .
: elseif you.in_branch("Zot") then
SUBST:  defghij = |*
NSUBST: D = 3=0 / 5=0. / 2=9 / 3=9. / 2=8 / 2=8. / .
# Lair branches
: else
SUBST:  defg = |*, h = *%, i = %$.., j = .
NSUBST: D = 3=0 / 3=0. / 098. / 9 / 2=9. / 8 / 8. / .
: end
SUBST:  r : b., s : b., b : bcvx
NSUBST: R = R / .
MARKER: P = lua:transp_loc("ghost_arena_entry")
MARKER: Q = lua:transp_dest_loc("ghost_arena_entry")
MARKER: R = lua:transp_loc("ghost_arena_exit")
MARKER: S = lua:transp_dest_loc("ghost_arena_exit")
: ghost_vault_setup(_G)
MAP
  ...........
 ..nnnnnnnnn..
 .nnRD...DRnn.
 .nG.rsDsrDGn.
 .nD.sr.rsqgn.
..n.D..D.Djen..
@Pn.O.DQD.idnS@
..n.D..D.Dkfn..
 .nD.sr.rsphn.
 .nG.rsDsrDGn.
 .nnRD...DRnn.
 ..nnnnnnnnn..
  ...........
ENDMAP

###############################################################################
#
# <<2>> Themed ghost vaults.
#
#
###############################################################################

NAME:   gammafunk_ghost_necromancy
# Omit Elf since that branch has few good monsters for derived undead.
DEPTH:  D:3-, Lair, Orc, Shoals, Snake, Spider, Swamp, Crypt, Depths, Zot
ORIENT: float
KMONS:  O = player ghost
# Progressive depth/numbers of zombies and type/amount of loot.
# First handle Dungeon.
: if you.in_branch("D") then
:     if you.depth() < 6 then
MONS:   skeleton place:D:6 / zombie place:D:6
SUBST:  d = *%, e = %$, fghij = -
NSUBST: 1 = 2=1 / 1---
:     elseif you.depth() < 9 then
MONS:   skeleton place:D:9 / zombie place:D:9 / spectre place:D:9 / \
        simulacrum place:D:9
SUBST:  d = *, e = *%, f = %$--, ghij = -, 1 = 111-
NSUBST: 1 = 2=1 / 1-
:     elseif you.depth() < 12 then
MONS:   w:5 zombie place:D:12 / spectre place:D:12 / simulacrum place:D:12
SUBST:  d = |*, e = *, f = %$, ghij = -
NSUBST: 1 = 3=1 / 1-, - = 1- / -
:     elseif you.depth() < 15 then
MONS:   w:5 zombie place:D:15 / spectre place:D:15 / simulacrum place:D:15
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: - = 4=1- / -
:     else
MONS:   place:Depths:1 zombie / place:Depths:1 spectre / \
        place:Depths:1 simulacrum
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: - = 1 / 4=1- / -
:     end
# Set up derived undead from branch end for non-Dungeon branches.
: else
{{
  undead_place = "place:" .. you.branch() .. ":" .. dgn.br_depth(you.branch())
  mons(undead_place .. " spectre / " .. undead_place .. " simulacrum")
}}
: end
# Handle loot/monsters for non-Dungeon branches.
: if you.in_branch("Lair") then
SUBST:  de = |*, f = *%, g = %$--, hij = -
NSUBST: 1 = 4=1 / 1-, - = 2=1- / -
: elseif you.in_branch("Orc") then
SUBST:  de = |*, f = *, g = %$, hij = -
NSUBST: 1 = 5=1 / 1-, - = 3=1- / -
: elseif you.in_branch("Crypt") then
MONS: revenant / curse skull
SUBST:  defg = |*, h = *, i = %$, j = -
NSUBST: 1 = 12 / 1, - = 3=1 / 6=1- / -
: elseif you.in_branch("Depths") then
MONS: ancient lich
SUBST:  defgh = |*, i = *%, j = %$--
NSUBST: 1 = 2=12 / 1, - = 3=1 / 8=1- / -
: elseif you.in_branch("Zot") then
MONS: ancient lich, curse toe
SUBST:  defghij = |*
NSUBST: 1 = 12 / 123 / 1, - = 4=1 / 8=1- / -
# Lair branches
: else
SUBST:  def = |*, g = *, h = %$, ij = -
NSUBST: - = 2=1 / 4=1- / -
: end
FTILE:  -|*%$O12G = floor_pebble_brown / floor_pebble_darkgray
: ghost_vault_setup(_G)
MAP
 ccccccc
.n1c1c1c
.n---igc
.=---ecc
@=---dOc
.=---fcc
.n---jhc
.n1c1c1c
 ccccccc
ENDMAP

NAME:   gammafunk_ghost_spectres
DEPTH:  D:8-, Crypt
ORIENT: float
KMONS:  O = player ghost
# Dungeon levels
: if you.absdepth() < 10 then
MONS:   wraith, shadow / freezing wraith
SUBST:  d = *, e = *%, f = %$--,  ghi = -
NSUBST: D = 2=1 / 4=1- / -
: elseif you.absdepth() < 12 then
MONS:   wraith, shadow / freezing wraith
SUBST:  d = |*, e = *, f = %$,  ghi = -
NSUBST: D = 3=1 / 2=1- / 2-, - = 1- / -
: elseif you.absdepth() < 14 then
MONS:  wraith, shadow / freezing wraith
MONS:  shadow wraith / flayed ghost / phantasmal warrior
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: D = 4=1 / 1222 / 23--, - = 1- / -
: elseif you.absdepth() < 16 then
MONS:   wraith, shadow / freezing wraith
MONS:   shadow wraith / flayed ghost / phantasmal warrior
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: D = 2=1 / 12 / 2=2- / 3-, - = 1 / 3=1- / -
# Crypt
: else
MONS:   wraith / shadow
MONS:   freezing wraith / shadow wraith / phantasmal warrior / flayed ghost w:5
MONS:   eidolon, revenant / curse skull
SUBST:  defg = |*, h = *, i = %$
NSUBST: D = 2 / 3 / 2=3- / 4-, - = 2=1 / 2=1- / 2 / 3=2- / -
: end
FTILE:  -|*%$O1234G = floor_pebble_brown / floor_pebble_darkgray
: ghost_vault_setup(_G)
MAP
MAP
 ccccccc
.nDcDcDc
.n----gc
.=---eGc
@=--idOc
.=---fGc
.n----hc
.nDcDcDc
 ccccccc
ENDMAP

NAME:   gammafunk_ghost_ooze
DEPTH:  D:8, Lair, Depths
ORIENT: float
KMONS:  O = player ghost
MONS:   jelly, slime creature, death ooze
: if you.in_branch("D") then
:     if you.depth() < 10 then
SUBST:  d = *, e = *%, f = %$--,  ghi = -
NSUBST: - = 2=1 / 4=1. / 2=2 / 4=2. / .
:     elseif you.depth() < 12 then
SUBST:  d = |*, e = *, f = %$,  ghi = -
NSUBST: e = %$-- / -, - = 2=1 / 4=1. / 3=2 / 6=2. / .
:     elseif you.depth() < 14 then
SUBST:  def = |*, g = *%, h = %$--, ij = -
NSUBST: - =  2=1 / 4=1. / 4=2 / 8=2. / 1=3...
:     else
SUBST:  defg = |*, h = *, i = %$, j = -
NSUBST: - = 2=1 / 4=1. / 3=2 / 6=2. / 1=3 / 2=3.
:     end
: elseif you.in_branch("Lair") then
SUBST:  de = |*, f = *%, g = %$--, hij = -
NSUBST: f = *%$ / -, - = 2=1 / 4=1. / 3=2 / 6=2. / 1=3 / 1=3...
# Depths
: else
SUBST:  defgh = |*, i = *%, j = %$--
NSUBST: - = 6=2 / 7=2. / 4=3 / 8=3.
: end
KFEAT:  _ = altar_jiyva
COLOUR: c = green
COLOUR: n = lightgreen
FTILE:  -|*%$O01289G = floor_pebble_brown / floor_pebble_darkgray
: ghost_vault_setup(_G)
MAP
  ccccc
 cc---cn.
cci----n.
ceg----=.
c_dO---=@
cfh----=.
ccj----n.
 cc---cn.
  ccccc
nnnn
ENDMAP

NAME:   gammafunk_ghost_mausoleum
DEPTH:  D:3-, Swamp, Crypt, Depths, Zot
WEIGHT: 2 (D:3-7), 5 (D:8-11)
ORIENT: float
KMONS:  O = player ghost
: if you.in_branch("D") then
:     if you.depth() < 6 then
MONS:   skeleton place:D:6 / zombie place:D:6
MONS:   mummy / shadow imp / wight / necrophage / phantom / hungry ghost
SUBST:  d = *%, e = %$, f = %$--, ghij = -
NSUBST: D = 2=1 / 2=1- / 2- / -
:     elseif you.depth() < 9 then
MONS:   skeleton place:D:9 / zombie place:D:9 / spectre place:D:9 / \
        simulacrum place:D:9 / mummy / shadow imp / wight / necrophage / \
        phantom / hungry ghost
MONS:   wraith / vampire
SUBST:  d = *, e = *%, f = %$,  ghi = -
NSUBST: D = 2=1 / 3=1- / 2- / 2--- / -
:     elseif you.depth() < 12 then
MONS:   mummy / wight / zombie place:D:12 / spectre place:D:12 / \
        simulacrum place:D:12 / phantom / hungry ghost / wraith / vampire
MONS:   vampire mosquito band / shadow / death knight / skeletal warrior / \
        freezing wraith w:5
SUBST:  d = |*, e = *, f = *%,  g = %$--, hi = -
NSUBST: D = 2=1 / 4=1- / 2=2- / -
:     elseif you.depth() < 14 then
MONS:   zombie place:D:15 / spectre place:D:15 / simulacrum place:D:15 / \
        vampire mosquito band / death knight / skeletal warrior
MONS:   freezing wraith / necromancer / shadow wraith / vampire knight / \
        phantasmal warrior / flayed ghost
SUBST:  def = |*, g = *, h = %$, ij = -
NSUBST: D = 3=1 / 5=1- / 2 / 222- / -
:     else
MONS:   zombie place:Depths:1 / spectre place:Depths:1 / \
        simulacrum place:Depths:1 / \
        vampire mosquito band / death knight / skeletal warrior / \
        freezing wraith
MONS:   necromancer / shadow wraith / vampire knight / phantasmal warrior / \
        flayed ghost
SUBST:  def = |*, g = *, h = %$, ij = -
NSUBST: D = 4=1 / 4=1- / 2 / 2=2- / -
: end
: elseif you.in_branch("Swamp") then
MONS:   spectre place:Swamp:4 / simulacrum place:Swamp:4 / shadow / \
        bog body / vampire mosquito band / tyrant leech
MONS:   ghost crab / hydra spectre / hydra simulacrum
SUBST:  defg = |*, h = *%, i = %$--, j = -
NSUBST: D = 4=1 / 5=1- / 2 / 2=2- / 2--- / -
: elseif you.in_branch("Crypt") then
SUBST:  defgh = |*, i = *%, j = %$..
NSUBST: D = 5=0 / 5=0- / 98 / 3=98-- / 98------ / -
: elseif you.in_branch("Depths") then
MONS:   spectre place:Depths:5 / simulacrum place:Depths:5 / \
        necromancer / vampire knight / vampire mage / sphinx / flayed ghost w:5
MONS:   lich / deep elf death mage / juggernaut simulacrum / \
        juggernaut spectre / caustic shrike simulacrum / caustic shrike spectre
MONS:   ancient lich
SUBST:  defgh = |*, i = *, j = %$
NSUBST: D = 5=0 / 6=0- / 2 / 4=2- / 3- / -
: elseif you.in_branch("Zot") then
MONS:   simulacrum place:Zot:5 / spectre place:Zot:5 / shadow dragon / \
        death cob
MONS:   golden dragon simulacrum / golden dragon spectre / \
        quicksilver dragon simulacrum / quicksilver dragon spectre \
        killer klown simulacrum / killer klown spectre / ancient lich
MONS:   curse toe
SUBST:  defghij = |*, 2 = 12
NSUBST: D = 5=0 / 7=0- / 2=2 / 2=2- / 3- / -
: end
NSUBST: R = R / -
MARKER: P = lua:transp_loc("ghost_mausoleum_entry")
MARKER: Q = lua:transp_dest_loc("ghost_mausoleum_entry")
MARKER: R = lua:transp_loc("ghost_mausoleum_exit")
MARKER: S = lua:transp_dest_loc("ghost_mausoleum_exit")
FTILE:  -|*%$O01289G = floor_pebble_brown / floor_pebble_darkgray
: ghost_vault_setup(_G)
MAP
 ...............
 .nnnnnnnnnnnnn.
 .nR--D---D--Rn.
 .n-D---D---D-n.
 .n--ccc-ccc-in.
 .n-DcGcDcGcDgn.
..n----------en..
@PnOD-D-Q-D-DdnS@
..n----------fn..
 .n-DcGcDcGcDhn.
 .n--ccc-ccc-jn.
 .n-D---D---D-n.
 .nR--D---D--Rn.
 .nnnnnnnnnnnnn.
 ...............
ENDMAP
